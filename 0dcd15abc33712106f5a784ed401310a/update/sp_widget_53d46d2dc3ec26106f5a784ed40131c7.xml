<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($scope, spModal) {
	$scope.showModal = false;
	$scope.newAviso = { titulo: "", descricao: "", urgente: false };

	// Alterna a exibição do modal
	$scope.toggleModal = function() {
		$scope.showModal = !$scope.showModal;
	};

	// Adiciona um novo aviso
	$scope.addAviso = function() {
		if (!$scope.newAviso.titulo || !$scope.newAviso.descricao) {
			alert("Preencha todos os campos.");
			return;
		}

		$scope.data.newAviso = $scope.newAviso;
		$scope.server.update({
			newAviso: $scope.newAviso
		}).then(function(response) {
			if (response.success) {
				$scope.data.records = response.records;
				$scope.toggleModal();
				$scope.newAviso = { titulo: "", descricao: "", urgente: false };
			} else {
				alert("Erro ao adicionar aviso.");
			}
		});
	};

	// Remove um aviso
	$scope.deleteItem = function(sys_id) {
		spModal.confirm("Tem certeza que deseja excluir este aviso?").then(function(confirmed) {
			if (confirmed) {
				$scope.server.update({
					avisoToRemove: { sys_id: sys_id }
				}).then(function(response) {
					if (response.success) {
						$scope.data.records = response.records;
					} else {
						alert("Erro ao excluir aviso.");
					}
				});
			}
		});
	};
}
]]></client_script>
        <controller_as>c</controller_as>
        <css>p {
  font-weight: normal;
}

.panel-body {
  background-color: rgba(255, 255, 255, 0.82) !important;
}

.panel {
  background-color: rgba(255, 255, 255, 0.8) !important;
}

.aviso {
  border-radius: 5px;
  margin-bottom: 5px;
  padding: 10px;
}

.aviso-normal {
  background-color: #ffeb3b; 
  color: #333; 
}

.aviso-urgente {
  background-color: #ff3b3b; 
  color: #ffffff;
  font-weight: bold;
}

.modal {
  display: flex;
  align-items: center;
  justify-content: center;
  background: rgba(0, 0, 0, 0.5);
  color: #000000;

}

.modal-dialog {
  background: white;
  border-radius: 10px;
  padding: 20px;
  width:600px;
}
</css>
        <data_table>sp_instance_vlist</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list>table,filter,maximum_entries,display_field,color,size,glyph,sp_page</field_list>
        <has_preview>false</has_preview>
        <id>avisos</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Avisos</name>
        <option_schema>[{"name":"always_show","section":"Behavior","label":"Show even when empty","type":"boolean"},{"name":"panel_body_height","section":"Presentation","label":"List body height","type":"string"},{"name":"image_field","section":"Presentation","label":"Image field","type":"field_name"},{"name":"secondary_fields","section":"Data","label":"Secondary fields","type":"field_list"},{"name":"rounded_images","section":"Presentation","label":"Rounded images","type":"boolean"},{"displayValue":"Page","name":"list_page","section":"Data","label":"List page","type":"reference","value":"sp_page","ed":{"reference":"sp_page"}},{"name":"hide_footer","section":"Presentation","label":"Hide Footer","type":"boolean"},{"displayValue":"UI View","hint":"View to use when target page is a form","name":"view","section":"Behavior","label":"View","type":"reference","value":"sys_ui_view","ed":{"reference":"sys_ui_view"}},{"hint":"If checked, Simple List will not automatically updated based on changes to the filtered records","name":"disable_record_watcher","section":"Behavior","label":"Disable record watcher","type":"boolean"},{"name":"filter_acls","section":"Data","default_value":"false","label":"Enforce field-level Read ACLs on Filter query terms (may alter the query for unprivileged users)","type":"boolean"}]</option_schema>
        <public>true</public>
        <roles/>
        <script><![CDATA[(function() {
    data.records = [];
    data.canAdd = gs.hasRole('x_1593770_mock_ski.gestor') || gs.hasRole('x_1593770_mock_ski.monitor'); 

    var grAvisos = new GlideRecord('x_1593770_mock_ski_aviso'); 
    grAvisos.orderByDesc('urgente'); 
    grAvisos.query();

    while (grAvisos.next()) {
        data.records.push({
            sys_id: grAvisos.getValue('sys_id'),
            titulo: grAvisos.getDisplayValue('aviso'),
            descricao: grAvisos.getValue('descricao'),
						criado: grAvisos.getValue('sys_created_by'),
            urgente: grAvisos.getValue('urgente') == '1'
        });
    }

    if (input && input.newAviso) {
        var newAviso = input.newAviso;

        if (newAviso.titulo && newAviso.descricao) {
            var grNew = new GlideRecord('x_1593770_mock_ski_aviso'); // Substitua pelo nome correto da tabela
            grNew.initialize();
            grNew.aviso = newAviso.titulo;
            grNew.descricao = newAviso.descricao;
            grNew.urgente = newAviso.urgente ? '1' : '0';
            grNew.insert();
        }

        // Atualiza a lista de avisos após adicionar
        updateRecords();
        data.success = true;
    }

    // Remover aviso
    if (input && input.avisoToRemove) {
        var grDelete = new GlideRecord('x_1593770_mock_ski_aviso');
        if (grDelete.get(input.avisoToRemove.sys_id)) {
            grDelete.deleteRecord();
        }
        
        // Atualiza a lista de avisos após remover
        updateRecords();
        data.success = true;
    }

    // Função para atualizar a lista de avisos
    function updateRecords() {
        data.records = [];
        var grUpdated = new GlideRecord('x_1593770_mock_ski_aviso');
        grUpdated.orderByDesc('sys_created_on');
        grUpdated.query();

        while (grUpdated.next()) {
            data.records.push({
                sys_id: grUpdated.getUniqueValue(),
                titulo: grUpdated.getValue('aviso'),
                descricao: grUpdated.getValue('descricao'),
                criado: grUpdated.getValue('sys_created_by'),
                urgente: grUpdated.getValue('urgente') === '1'
            });
        }
    }

    // Carregar avisos na inicialização
    updateRecords();
})();
]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-03-27 16:32:57</sys_created_on>
        <sys_id>53d46d2dc3ec26106f5a784ed40131c7</sys_id>
        <sys_mod_count>47</sys_mod_count>
        <sys_name>Avisos</sys_name>
        <sys_package display_value="Mock Skillup" source="x_1593770_mock_ski">0dcd15abc33712106f5a784ed401310a</sys_package>
        <sys_policy/>
        <sys_scope display_value="Mock Skillup">0dcd15abc33712106f5a784ed401310a</sys_scope>
        <sys_update_name>sp_widget_53d46d2dc3ec26106f5a784ed40131c7</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-03-28 13:41:22</sys_updated_on>
        <template><![CDATA[<div class="panel panel-default">
  <div class="panel-heading d-flex justify-content-between align-items-center">
    <h3 class="panel-title">Lista de Avisos</h3>
    <button class="btn btn-success btn-sm"
            ng-if="data.canAdd"
            ng-click="toggleModal()">
      <fa name="plus"></fa> Adicionar Aviso
    </button>
  </div>

  <div class="panel-body">
    <ul class="list-group">
      <li class="list-group-item aviso"
          ng-repeat="aviso in data.records | orderBy: '-urgente' track by aviso.sys_id"
          ng-class="{'aviso-urgente': aviso.urgente, 'aviso-normal': !aviso.urgente}">
        <div class="d-flex justify-content-between align-items-center">
          <div>
            <h4 class="m-0">{{ aviso.titulo }}</h4>
            <p class="m-0">{{ aviso.descricao }}</p>
            <p class="m-0"> ● {{ aviso.criado }}</p>
          </div>
          <!--<button class="btn btn-danger btn-xs" ng-click="deleteItem(aviso.sys_id)" ng-if="data.canAdd">
            <fa name="times"></fa> Remover
          </button>-->
        </div>
      </li>
    </ul>
    <div ng-if="data.records.length === 0" class="text-center text-muted">
      Nenhum aviso encontrado.
    </div>
  </div>
</div>

<!-- Modal para Adicionar Aviso -->
<div class="modal fade in" ng-if="showModal">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" ng-click="toggleModal()">&times;</button>
        <h4 class="modal-title">Adicionar Aviso</h4>
      </div>
      <div class="modal-body">
        <form>
          <div class="form-group">
            <label for="titulo">Título</label>
            <input type="text" class="form-control" ng-model="newAviso.titulo" required>
          </div>
          <div class="form-group">
            <label for="descricao">Descrição</label>
            <textarea class="form-control" ng-model="newAviso.descricao" required></textarea>
          </div>
          <div class="form-group">
            <label>
              <input type="checkbox" ng-model="newAviso.urgente"> Aviso Urgente
            </label>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button class="btn btn-default" ng-click="toggleModal()">Cancelar</button>
        <button class="btn btn-primary" ng-click="addAviso()">Adicionar</button>
      </div>
    </div>
  </div>
</div>
]]></template>
    </sp_widget>
</record_update>
